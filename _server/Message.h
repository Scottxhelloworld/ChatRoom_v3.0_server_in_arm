#ifndef MESSAGE_H
#define MESSAGE_H
enum ACTIONS{CHECK_NAME = 100,NAME_ERR,NAME_SUCCESS,REGISTER_WIN,FRIEND_WIN,QUIT,REG_USER,REG_SUCCESS,REG_FAILURE,LOGIN,MESSAGE_NOTUSE,LOGIN_SUCCESS,LOGIN_FAILURE,LOGIN_ONLINE,PASSWD_EASY = 200,PASSWD_NORMAL,PASSWD_HARD,BACK_TO_LOGIN = 300,GET_FIRST_FOUR_FRIENDS,GET_NEXT_FOUR_FRIENDS,GET_PRE_FOUR_FRIENDS,CHAT_PRIVATE,LEAVE_ONLINE,MSG_NOREAD,MSG_READ,SEEK_UNREAD,NOTIFY_OTHER,NOTIFY_LEAVE_ONLINE,GET_FIRST_CHAT_RECORD,GET_NEXT_CHAT_RECORD,GET_PRE_CHAT_RECORD,HIDING,BACK_ONLINE,ADD_TO_BLACKLIST,UPDATE_SIG,NOTIFY_UPDATE_SIG,BEGIN_TRANSFER_FILE,START_RECEIVE_FILE,START_SEND_FILE,START_RECEIVE_FILE_ERROR,RECEIVE_NOT_ONLINE,SENDING_FILE,RECEVING_FILE,SEARCH_FRIENDS,SEARCH_ERROR,GET_RECENT_CHAT,GET_ALL_FRIENDS,CREATE_GROUP,INSERT_GROUP,CHECK_GROUP_NAME,GROUP_NAME_ERROR,GROUP_NAME_OK,GET_GROUP,CHAT_GROUP,GET_GROUP_CREATE_TIME,GET_GROUP_MEMBERS,GET_BAN,SET_BAN,CANCEL_BAN,NOTIFY_BAN,REMOVE_GROUP_MEMBER,GET_NOT_IN_GROUP_USERS,ADD_GROUP_MEMBERS,NOTIFY_UPDATE_GROUP_MEMBER_LIST,LEAVE_GROUP,GET_RECENT_GROUP_CHAT_RECORD,GET_FIRST_CHAT_RECORD_GROUP,GET_NEXT_CHAT_RECORD_GROUP,GET_PRE_CHAT_RECORD_GROUP,GET_BACK_PASSWD,GET_QUESTION,MODIFY_PASSWD,WRONG_ANSWER,NO_QUESTION,MODIFY_PASSWD_SUCCESS,REG_VIP};

typedef struct message
{
	int action;
	int hasquestion;   // 是否有密保   也可以用来保存传输文件的字节
	int online[4];        //用来保存当前页面显示的4个人是否在线(先查询用户表 再查询在线表)
	int has_undomsg[4];   //保存获取联系人后对应的每个人是否有未读消息

	char chat_time[32];   //保存聊天时间  保存建群时间
	char name[20];
	char passwd[20];

	char sigs[4][32];        //返回每个联系人的个性签名
	char toname[4][32];
	char msg[512];      //可以保存个性签

	char question[30]; 
	char answer[30];

}MSG;

//组 和 用户都可用
typedef struct user
{
	char name[20];

	int ban;
	int online;        
	struct user * next;
}USER;

#endif

